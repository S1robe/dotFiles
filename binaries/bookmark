#!/bin/bash

STRGDIR="$HOME/.bookmarks/"

# Ensure the directory exists
if [ ! -d "$STRGDIR" ]; then 
  mkdir -p "$STRGDIR" || exit
fi

# Check dependencies
for cmd in dmenu xclip dunst dunstify; do
  if ! command -v "$cmd" >/dev/null 2>&1; then
    echo "$cmd is required but not installed."
    exit 1
  fi
done

# Notify helper
notify() {
  dunstify -a Bookmark "$1"
}

# Save bookmark
save_bookmark() {
  CHOICE=$(find "$STRGDIR" -type f -printf '%f\n' | dmenu -l 5 -p "Select or create file to save to:")
  CHOICE=${CHOICE// /_}
  CHOICE=${CHOICE##*/}
  [ -z "$CHOICE" ] && notify "Bookmark canceled." && exit 0

  FILE="$STRGDIR$CHOICE"
  touch "$FILE"

  notify "$FILE"
  CNTNT=$(echo "" | dmenu -p "Content for the Bookmark (default Clipboard)")
  if [ -z "$CNTNT" ]; then
    CNTNT="$(xclip -selection clipboard -o)"
  fi

  # Check if CNTNT is still empty after trying to use clipboard
  if [ -z "$CNTNT" ]; then
    notify "No content provided. Save canceled."
    exit 0
  fi

  BKMKS=$(awk -F: '{print $1}' "$FILE")
  NAME=$(echo -e "$BKMKS" | dmenu -l 5 -p "Name of bookmark:")

  [ -z "$NAME" ] && notify "No name provided. Bookmark canceled." && exit 0

  if grep -q "^$NAME:" "$FILE"; then
    OLD_CONTENT=$(awk -F: -v name="$NAME" '$1 == name {print $2}' "$FILE")
    echo "$OLD_CONTENT" | xclip -selection clipboard
    REPLACE=$(echo -e "y\nn" | dmenu -p "$NAME exists. Replace? (y/n)")
    [[ "$REPLACE" != "y" ]] && notify "Bookmark not replaced." && exit 0
    sed -i "s/^$NAME:.*/$NAME:$CNTNT/" "$FILE"
  else
    echo "$NAME:$CNTNT" >> "$FILE"
  fi

  notify "Bookmark '$NAME' saved to $CHOICE."
}

# Retrieve bookmark
retrieve_bookmark() {
  CHOICE=$(find "$STRGDIR" -type f -printf '%f\n' | dmenu -l 5 -p "Select file to retrieve from:")
  CHOICE=${CHOICE// /_}
  CHOICE=${CHOICE##*/}
  [ -z "$CHOICE" ] && notify "No file selected." && exit 0

  FILE="$STRGDIR$CHOICE"
  [ ! -f "$FILE" ] && notify "File not found." && exit 0

  NAME=$(awk -F: '{print $1}' "$FILE" | dmenu -l 5 -p "Select bookmark:")
  [ -z "$NAME" ] && notify "No bookmark selected." && exit 0

  CONTENT=$(awk -F: -v name="$NAME" '$1 == name { $1=""; print }' "$FILE")
  [ -z "$CONTENT" ] && notify "Bookmark not found." && exit 0

  echo "$CONTENT" | xclip -selection clipboard
  notify "Bookmark '$NAME' placed on clipboard."
}

# Delete a bookmark
delete_bookmark() {
  local file name

  # Ask where to look
  CHOICE=$(find "$STRGDIR" -type f | dmenu -l 5 -p "Select file to delete from:")
  CHOICE=${CHOICE// /_}
  CHOICE=${CHOICE##*/}
  [ -z "$CHOICE" ] && notify "Delete canceled." && exit 0
  file="$STRGDIR/$CHOICE"
  [ ! -f "$file" ] && notify "File not found." && exit 0

  # Ask for the bookmark name
  name=$(awk -F: '{print $1}' "$file" | dmenu -l 5 -p "Select bookmark to delete:")
  [ -z "$name" ] && notify "No bookmark selected. Delete canceled." && exit 0

  # Confirm deletion
  if [ "$(echo -e "y\nn" | dmenu -p "Delete $name? (y/n)")" != "y" ]; then
    notify "Delete canceled."
    exit 0
  fi

  # Delete the bookmark
  sed -i "/^$name:/d" "$file"
  notify "Bookmark '$name' deleted."
}

# Main
case "$1" in
  -s|--save) save_bookmark ;;
  -r|--retrieve) retrieve_bookmark ;;
 -d|--delete) delete_bookmark ;;
  *)
    echo "Usage: $0 {-s|--save|-r|--retrieve" #|-d|--delete}"
    exit 1
    ;;
esac
